<?xml version="1.0"?>
<launch>


    <arg name="des_x" default="10"/>
    <arg name="des_y" default="10"/>
    <arg name="des_theta"  default="1.9"/>

    <param name="des_pos_x" value="$(arg des_x)" />
    <param name="des_pos_y" value="$(arg des_y)" />
    <param name="des_pos_yaw" value="$(arg des_theta)" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="gui" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="gui" value="$(arg gui)" />
  </include>
	
  <!-- Load the URDF into ROS parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find summit_description)/robot/summit.urdf.xacro' --inorder" />
  <param name="use_gui" value="$(arg gui)"/>

  <!-- Publish joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- convert joint states to TF transforms for rviz, etc  -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

  <!-- Spawn model -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -x 0 -y 0 -z 0  -model summit -param robot_description"/>

  
  <!--脚本文件-->
  <node pkg="summit_description" type="goToPoint_omni.py" name="go_to_point" output="screen" />

</launch>

